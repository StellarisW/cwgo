// Code generated by thriftgo (0.3.4). DO NOT EDIT.

package agent

import (
	"fmt"
	"github.com/cloudwego/cwgo/platform/server/shared/kitex_gen/model"
)

type AddTemplateReq struct {
	Name string `thrift:"name,1" frugal:"1,default,string" json:"name"`
	Type int32  `thrift:"type,2" frugal:"2,default,i32" json:"type"`
}

func NewAddTemplateReq() *AddTemplateReq {
	return &AddTemplateReq{}
}

func (p *AddTemplateReq) InitDefault() {
	*p = AddTemplateReq{}
}

func (p *AddTemplateReq) GetName() (v string) {
	return p.Name
}

func (p *AddTemplateReq) GetType() (v int32) {
	return p.Type
}
func (p *AddTemplateReq) SetName(val string) {
	p.Name = val
}
func (p *AddTemplateReq) SetType(val int32) {
	p.Type = val
}

func (p *AddTemplateReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AddTemplateReq(%+v)", *p)
}

type AddTemplateResp struct {
	Code int32  `thrift:"code,1" frugal:"1,default,i32" json:"code"`
	Msg  string `thrift:"msg,2" frugal:"2,default,string" json:"msg"`
}

func NewAddTemplateResp() *AddTemplateResp {
	return &AddTemplateResp{}
}

func (p *AddTemplateResp) InitDefault() {
	*p = AddTemplateResp{}
}

func (p *AddTemplateResp) GetCode() (v int32) {
	return p.Code
}

func (p *AddTemplateResp) GetMsg() (v string) {
	return p.Msg
}
func (p *AddTemplateResp) SetCode(val int32) {
	p.Code = val
}
func (p *AddTemplateResp) SetMsg(val string) {
	p.Msg = val
}

func (p *AddTemplateResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AddTemplateResp(%+v)", *p)
}

type DeleteTemplateReq struct {
	Ids []int64 `thrift:"ids,1" frugal:"1,default,list<i64>" json:"ids"`
}

func NewDeleteTemplateReq() *DeleteTemplateReq {
	return &DeleteTemplateReq{}
}

func (p *DeleteTemplateReq) InitDefault() {
	*p = DeleteTemplateReq{}
}

func (p *DeleteTemplateReq) GetIds() (v []int64) {
	return p.Ids
}
func (p *DeleteTemplateReq) SetIds(val []int64) {
	p.Ids = val
}

func (p *DeleteTemplateReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("DeleteTemplateReq(%+v)", *p)
}

type DeleteTemplateResp struct {
	Code int32  `thrift:"code,1" frugal:"1,default,i32" json:"code"`
	Msg  string `thrift:"msg,2" frugal:"2,default,string" json:"msg"`
}

func NewDeleteTemplateResp() *DeleteTemplateResp {
	return &DeleteTemplateResp{}
}

func (p *DeleteTemplateResp) InitDefault() {
	*p = DeleteTemplateResp{}
}

func (p *DeleteTemplateResp) GetCode() (v int32) {
	return p.Code
}

func (p *DeleteTemplateResp) GetMsg() (v string) {
	return p.Msg
}
func (p *DeleteTemplateResp) SetCode(val int32) {
	p.Code = val
}
func (p *DeleteTemplateResp) SetMsg(val string) {
	p.Msg = val
}

func (p *DeleteTemplateResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("DeleteTemplateResp(%+v)", *p)
}

type UpdateTemplateReq struct {
	Id   int64  `thrift:"id,1" frugal:"1,default,i64" json:"id"`
	Name string `thrift:"name,2" frugal:"2,default,string" json:"name"`
}

func NewUpdateTemplateReq() *UpdateTemplateReq {
	return &UpdateTemplateReq{}
}

func (p *UpdateTemplateReq) InitDefault() {
	*p = UpdateTemplateReq{}
}

func (p *UpdateTemplateReq) GetId() (v int64) {
	return p.Id
}

func (p *UpdateTemplateReq) GetName() (v string) {
	return p.Name
}
func (p *UpdateTemplateReq) SetId(val int64) {
	p.Id = val
}
func (p *UpdateTemplateReq) SetName(val string) {
	p.Name = val
}

func (p *UpdateTemplateReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UpdateTemplateReq(%+v)", *p)
}

type UpdateTemplateResp struct {
	Code int32  `thrift:"code,1" frugal:"1,default,i32" json:"code"`
	Msg  string `thrift:"msg,2" frugal:"2,default,string" json:"msg"`
}

func NewUpdateTemplateResp() *UpdateTemplateResp {
	return &UpdateTemplateResp{}
}

func (p *UpdateTemplateResp) InitDefault() {
	*p = UpdateTemplateResp{}
}

func (p *UpdateTemplateResp) GetCode() (v int32) {
	return p.Code
}

func (p *UpdateTemplateResp) GetMsg() (v string) {
	return p.Msg
}
func (p *UpdateTemplateResp) SetCode(val int32) {
	p.Code = val
}
func (p *UpdateTemplateResp) SetMsg(val string) {
	p.Msg = val
}

func (p *UpdateTemplateResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UpdateTemplateResp(%+v)", *p)
}

type GetTemplatesReq struct {
	Page    int32  `thrift:"page,1" frugal:"1,default,i32" json:"page"`
	Limit   int32  `thrift:"limit,2" frugal:"2,default,i32" json:"limit"`
	Order   int32  `thrift:"order,3" frugal:"3,default,i32" json:"order"`
	OrderBy string `thrift:"order_by,4" frugal:"4,default,string" json:"order_by"`
}

func NewGetTemplatesReq() *GetTemplatesReq {
	return &GetTemplatesReq{}
}

func (p *GetTemplatesReq) InitDefault() {
	*p = GetTemplatesReq{}
}

func (p *GetTemplatesReq) GetPage() (v int32) {
	return p.Page
}

func (p *GetTemplatesReq) GetLimit() (v int32) {
	return p.Limit
}

func (p *GetTemplatesReq) GetOrder() (v int32) {
	return p.Order
}

func (p *GetTemplatesReq) GetOrderBy() (v string) {
	return p.OrderBy
}
func (p *GetTemplatesReq) SetPage(val int32) {
	p.Page = val
}
func (p *GetTemplatesReq) SetLimit(val int32) {
	p.Limit = val
}
func (p *GetTemplatesReq) SetOrder(val int32) {
	p.Order = val
}
func (p *GetTemplatesReq) SetOrderBy(val string) {
	p.OrderBy = val
}

func (p *GetTemplatesReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetTemplatesReq(%+v)", *p)
}

type GetTemplatesResp struct {
	Code int32                 `thrift:"code,1" frugal:"1,default,i32" json:"code"`
	Msg  string                `thrift:"msg,2" frugal:"2,default,string" json:"msg"`
	Data *GetTemplatesRespData `thrift:"data,3" frugal:"3,default,GetTemplatesRespData" json:"data"`
}

func NewGetTemplatesResp() *GetTemplatesResp {
	return &GetTemplatesResp{}
}

func (p *GetTemplatesResp) InitDefault() {
	*p = GetTemplatesResp{}
}

func (p *GetTemplatesResp) GetCode() (v int32) {
	return p.Code
}

func (p *GetTemplatesResp) GetMsg() (v string) {
	return p.Msg
}

var GetTemplatesResp_Data_DEFAULT *GetTemplatesRespData

func (p *GetTemplatesResp) GetData() (v *GetTemplatesRespData) {
	if !p.IsSetData() {
		return GetTemplatesResp_Data_DEFAULT
	}
	return p.Data
}
func (p *GetTemplatesResp) SetCode(val int32) {
	p.Code = val
}
func (p *GetTemplatesResp) SetMsg(val string) {
	p.Msg = val
}
func (p *GetTemplatesResp) SetData(val *GetTemplatesRespData) {
	p.Data = val
}

func (p *GetTemplatesResp) IsSetData() bool {
	return p.Data != nil
}

func (p *GetTemplatesResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetTemplatesResp(%+v)", *p)
}

type GetTemplatesRespData struct {
	Templates []*model.Template `thrift:"templates,1" frugal:"1,default,list<model.Template>" json:"templates"`
}

func NewGetTemplatesRespData() *GetTemplatesRespData {
	return &GetTemplatesRespData{}
}

func (p *GetTemplatesRespData) InitDefault() {
	*p = GetTemplatesRespData{}
}

func (p *GetTemplatesRespData) GetTemplates() (v []*model.Template) {
	return p.Templates
}
func (p *GetTemplatesRespData) SetTemplates(val []*model.Template) {
	p.Templates = val
}

func (p *GetTemplatesRespData) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetTemplatesRespData(%+v)", *p)
}

type AddTemplateItemReq struct {
	TemplateId int64  `thrift:"template_id,1" frugal:"1,default,i64" json:"template_id"`
	Name       string `thrift:"name,2" frugal:"2,default,string" json:"name"`
	Content    string `thrift:"content,3" frugal:"3,default,string" json:"content"`
}

func NewAddTemplateItemReq() *AddTemplateItemReq {
	return &AddTemplateItemReq{}
}

func (p *AddTemplateItemReq) InitDefault() {
	*p = AddTemplateItemReq{}
}

func (p *AddTemplateItemReq) GetTemplateId() (v int64) {
	return p.TemplateId
}

func (p *AddTemplateItemReq) GetName() (v string) {
	return p.Name
}

func (p *AddTemplateItemReq) GetContent() (v string) {
	return p.Content
}
func (p *AddTemplateItemReq) SetTemplateId(val int64) {
	p.TemplateId = val
}
func (p *AddTemplateItemReq) SetName(val string) {
	p.Name = val
}
func (p *AddTemplateItemReq) SetContent(val string) {
	p.Content = val
}

func (p *AddTemplateItemReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AddTemplateItemReq(%+v)", *p)
}

type AddTemplateItemResp struct {
	Code int32  `thrift:"code,1" frugal:"1,default,i32" json:"code"`
	Msg  string `thrift:"msg,2" frugal:"2,default,string" json:"msg"`
}

func NewAddTemplateItemResp() *AddTemplateItemResp {
	return &AddTemplateItemResp{}
}

func (p *AddTemplateItemResp) InitDefault() {
	*p = AddTemplateItemResp{}
}

func (p *AddTemplateItemResp) GetCode() (v int32) {
	return p.Code
}

func (p *AddTemplateItemResp) GetMsg() (v string) {
	return p.Msg
}
func (p *AddTemplateItemResp) SetCode(val int32) {
	p.Code = val
}
func (p *AddTemplateItemResp) SetMsg(val string) {
	p.Msg = val
}

func (p *AddTemplateItemResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AddTemplateItemResp(%+v)", *p)
}

type DeleteTemplateItemReq struct {
	Ids []int64 `thrift:"ids,1" frugal:"1,default,list<i64>" json:"ids"`
}

func NewDeleteTemplateItemReq() *DeleteTemplateItemReq {
	return &DeleteTemplateItemReq{}
}

func (p *DeleteTemplateItemReq) InitDefault() {
	*p = DeleteTemplateItemReq{}
}

func (p *DeleteTemplateItemReq) GetIds() (v []int64) {
	return p.Ids
}
func (p *DeleteTemplateItemReq) SetIds(val []int64) {
	p.Ids = val
}

func (p *DeleteTemplateItemReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("DeleteTemplateItemReq(%+v)", *p)
}

type DeleteTemplateItemResp struct {
	Code int32  `thrift:"code,1" frugal:"1,default,i32" json:"code"`
	Msg  string `thrift:"msg,2" frugal:"2,default,string" json:"msg"`
}

func NewDeleteTemplateItemResp() *DeleteTemplateItemResp {
	return &DeleteTemplateItemResp{}
}

func (p *DeleteTemplateItemResp) InitDefault() {
	*p = DeleteTemplateItemResp{}
}

func (p *DeleteTemplateItemResp) GetCode() (v int32) {
	return p.Code
}

func (p *DeleteTemplateItemResp) GetMsg() (v string) {
	return p.Msg
}
func (p *DeleteTemplateItemResp) SetCode(val int32) {
	p.Code = val
}
func (p *DeleteTemplateItemResp) SetMsg(val string) {
	p.Msg = val
}

func (p *DeleteTemplateItemResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("DeleteTemplateItemResp(%+v)", *p)
}

type UpdateTemplateItemReq struct {
	Id      int64  `thrift:"id,1" frugal:"1,default,i64" json:"id"`
	Name    string `thrift:"name,2" frugal:"2,default,string" json:"name"`
	Content string `thrift:"content,3" frugal:"3,default,string" json:"content"`
}

func NewUpdateTemplateItemReq() *UpdateTemplateItemReq {
	return &UpdateTemplateItemReq{}
}

func (p *UpdateTemplateItemReq) InitDefault() {
	*p = UpdateTemplateItemReq{}
}

func (p *UpdateTemplateItemReq) GetId() (v int64) {
	return p.Id
}

func (p *UpdateTemplateItemReq) GetName() (v string) {
	return p.Name
}

func (p *UpdateTemplateItemReq) GetContent() (v string) {
	return p.Content
}
func (p *UpdateTemplateItemReq) SetId(val int64) {
	p.Id = val
}
func (p *UpdateTemplateItemReq) SetName(val string) {
	p.Name = val
}
func (p *UpdateTemplateItemReq) SetContent(val string) {
	p.Content = val
}

func (p *UpdateTemplateItemReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UpdateTemplateItemReq(%+v)", *p)
}

type UpdateTemplateItemResp struct {
	Code int32  `thrift:"code,1" frugal:"1,default,i32" json:"code"`
	Msg  string `thrift:"msg,2" frugal:"2,default,string" json:"msg"`
}

func NewUpdateTemplateItemResp() *UpdateTemplateItemResp {
	return &UpdateTemplateItemResp{}
}

func (p *UpdateTemplateItemResp) InitDefault() {
	*p = UpdateTemplateItemResp{}
}

func (p *UpdateTemplateItemResp) GetCode() (v int32) {
	return p.Code
}

func (p *UpdateTemplateItemResp) GetMsg() (v string) {
	return p.Msg
}
func (p *UpdateTemplateItemResp) SetCode(val int32) {
	p.Code = val
}
func (p *UpdateTemplateItemResp) SetMsg(val string) {
	p.Msg = val
}

func (p *UpdateTemplateItemResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UpdateTemplateItemResp(%+v)", *p)
}

type GetTemplateItemsReq struct {
	TemplateId int64  `thrift:"template_id,1" frugal:"1,default,i64" json:"template_id"`
	Page       int32  `thrift:"page,2" frugal:"2,default,i32" json:"page"`
	Limit      int32  `thrift:"limit,3" frugal:"3,default,i32" json:"limit"`
	Order      int32  `thrift:"order,4" frugal:"4,default,i32" json:"order"`
	OrderBy    string `thrift:"order_by,5" frugal:"5,default,string" json:"order_by"`
}

func NewGetTemplateItemsReq() *GetTemplateItemsReq {
	return &GetTemplateItemsReq{}
}

func (p *GetTemplateItemsReq) InitDefault() {
	*p = GetTemplateItemsReq{}
}

func (p *GetTemplateItemsReq) GetTemplateId() (v int64) {
	return p.TemplateId
}

func (p *GetTemplateItemsReq) GetPage() (v int32) {
	return p.Page
}

func (p *GetTemplateItemsReq) GetLimit() (v int32) {
	return p.Limit
}

func (p *GetTemplateItemsReq) GetOrder() (v int32) {
	return p.Order
}

func (p *GetTemplateItemsReq) GetOrderBy() (v string) {
	return p.OrderBy
}
func (p *GetTemplateItemsReq) SetTemplateId(val int64) {
	p.TemplateId = val
}
func (p *GetTemplateItemsReq) SetPage(val int32) {
	p.Page = val
}
func (p *GetTemplateItemsReq) SetLimit(val int32) {
	p.Limit = val
}
func (p *GetTemplateItemsReq) SetOrder(val int32) {
	p.Order = val
}
func (p *GetTemplateItemsReq) SetOrderBy(val string) {
	p.OrderBy = val
}

func (p *GetTemplateItemsReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetTemplateItemsReq(%+v)", *p)
}

type GetTemplateItemsResp struct {
	Code int32                     `thrift:"code,1" frugal:"1,default,i32" json:"code"`
	Msg  string                    `thrift:"msg,2" frugal:"2,default,string" json:"msg"`
	Data *GetTemplateItemsRespData `thrift:"data,3" frugal:"3,default,GetTemplateItemsRespData" json:"data"`
}

func NewGetTemplateItemsResp() *GetTemplateItemsResp {
	return &GetTemplateItemsResp{}
}

func (p *GetTemplateItemsResp) InitDefault() {
	*p = GetTemplateItemsResp{}
}

func (p *GetTemplateItemsResp) GetCode() (v int32) {
	return p.Code
}

func (p *GetTemplateItemsResp) GetMsg() (v string) {
	return p.Msg
}

var GetTemplateItemsResp_Data_DEFAULT *GetTemplateItemsRespData

func (p *GetTemplateItemsResp) GetData() (v *GetTemplateItemsRespData) {
	if !p.IsSetData() {
		return GetTemplateItemsResp_Data_DEFAULT
	}
	return p.Data
}
func (p *GetTemplateItemsResp) SetCode(val int32) {
	p.Code = val
}
func (p *GetTemplateItemsResp) SetMsg(val string) {
	p.Msg = val
}
func (p *GetTemplateItemsResp) SetData(val *GetTemplateItemsRespData) {
	p.Data = val
}

func (p *GetTemplateItemsResp) IsSetData() bool {
	return p.Data != nil
}

func (p *GetTemplateItemsResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetTemplateItemsResp(%+v)", *p)
}

type GetTemplateItemsRespData struct {
	TemplateItems []*model.TemplateItem `thrift:"template_items,1" frugal:"1,default,list<model.TemplateItem>" json:"template_items"`
}

func NewGetTemplateItemsRespData() *GetTemplateItemsRespData {
	return &GetTemplateItemsRespData{}
}

func (p *GetTemplateItemsRespData) InitDefault() {
	*p = GetTemplateItemsRespData{}
}

func (p *GetTemplateItemsRespData) GetTemplateItems() (v []*model.TemplateItem) {
	return p.TemplateItems
}
func (p *GetTemplateItemsRespData) SetTemplateItems(val []*model.TemplateItem) {
	p.TemplateItems = val
}

func (p *GetTemplateItemsRespData) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetTemplateItemsRespData(%+v)", *p)
}
