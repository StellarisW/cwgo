// Code generated by thriftgo (0.3.4). DO NOT EDIT.

package agent

import (
	"fmt"
	"github.com/cloudwego/cwgo/platform/server/shared/kitex_gen/model"
)

type AddIDLReq struct {
	RepositoryId          int64  `thrift:"repository_id,1" frugal:"1,default,i64" json:"repository_id"`
	MainIdlPath           string `thrift:"main_idl_path,2" frugal:"2,default,string" json:"main_idl_path"`
	ServiceName           string `thrift:"service_name,3" frugal:"3,default,string" json:"service_name"`
	ServiceRepositoryName string `thrift:"service_repository_name,4" frugal:"4,default,string" json:"service_repository_name"`
}

func NewAddIDLReq() *AddIDLReq {
	return &AddIDLReq{}
}

func (p *AddIDLReq) InitDefault() {
	*p = AddIDLReq{}
}

func (p *AddIDLReq) GetRepositoryId() (v int64) {
	return p.RepositoryId
}

func (p *AddIDLReq) GetMainIdlPath() (v string) {
	return p.MainIdlPath
}

func (p *AddIDLReq) GetServiceName() (v string) {
	return p.ServiceName
}

func (p *AddIDLReq) GetServiceRepositoryName() (v string) {
	return p.ServiceRepositoryName
}
func (p *AddIDLReq) SetRepositoryId(val int64) {
	p.RepositoryId = val
}
func (p *AddIDLReq) SetMainIdlPath(val string) {
	p.MainIdlPath = val
}
func (p *AddIDLReq) SetServiceName(val string) {
	p.ServiceName = val
}
func (p *AddIDLReq) SetServiceRepositoryName(val string) {
	p.ServiceRepositoryName = val
}

func (p *AddIDLReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AddIDLReq(%+v)", *p)
}

type AddIDLResp struct {
	Code int32           `thrift:"code,1" frugal:"1,default,i32" json:"code"`
	Msg  string          `thrift:"msg,2" frugal:"2,default,string" json:"msg"`
	Data *AddIDLRespData `thrift:"data,3" frugal:"3,default,AddIDLRespData" json:"data"`
}

func NewAddIDLResp() *AddIDLResp {
	return &AddIDLResp{}
}

func (p *AddIDLResp) InitDefault() {
	*p = AddIDLResp{}
}

func (p *AddIDLResp) GetCode() (v int32) {
	return p.Code
}

func (p *AddIDLResp) GetMsg() (v string) {
	return p.Msg
}

var AddIDLResp_Data_DEFAULT *AddIDLRespData

func (p *AddIDLResp) GetData() (v *AddIDLRespData) {
	if !p.IsSetData() {
		return AddIDLResp_Data_DEFAULT
	}
	return p.Data
}
func (p *AddIDLResp) SetCode(val int32) {
	p.Code = val
}
func (p *AddIDLResp) SetMsg(val string) {
	p.Msg = val
}
func (p *AddIDLResp) SetData(val *AddIDLRespData) {
	p.Data = val
}

func (p *AddIDLResp) IsSetData() bool {
	return p.Data != nil
}

func (p *AddIDLResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AddIDLResp(%+v)", *p)
}

type AddIDLRespData struct {
	IdlId int64 `thrift:"idl_id,1" frugal:"1,default,i64" json:"idl_id"`
}

func NewAddIDLRespData() *AddIDLRespData {
	return &AddIDLRespData{}
}

func (p *AddIDLRespData) InitDefault() {
	*p = AddIDLRespData{}
}

func (p *AddIDLRespData) GetIdlId() (v int64) {
	return p.IdlId
}
func (p *AddIDLRespData) SetIdlId(val int64) {
	p.IdlId = val
}

func (p *AddIDLRespData) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AddIDLRespData(%+v)", *p)
}

type DeleteIDLsReq struct {
	Ids []int64 `thrift:"ids,1" frugal:"1,default,list<i64>" json:"ids"`
}

func NewDeleteIDLsReq() *DeleteIDLsReq {
	return &DeleteIDLsReq{}
}

func (p *DeleteIDLsReq) InitDefault() {
	*p = DeleteIDLsReq{}
}

func (p *DeleteIDLsReq) GetIds() (v []int64) {
	return p.Ids
}
func (p *DeleteIDLsReq) SetIds(val []int64) {
	p.Ids = val
}

func (p *DeleteIDLsReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("DeleteIDLsReq(%+v)", *p)
}

type DeleteIDLsResp struct {
	Code int32  `thrift:"code,1" frugal:"1,default,i32" json:"code"`
	Msg  string `thrift:"msg,2" frugal:"2,default,string" json:"msg"`
}

func NewDeleteIDLsResp() *DeleteIDLsResp {
	return &DeleteIDLsResp{}
}

func (p *DeleteIDLsResp) InitDefault() {
	*p = DeleteIDLsResp{}
}

func (p *DeleteIDLsResp) GetCode() (v int32) {
	return p.Code
}

func (p *DeleteIDLsResp) GetMsg() (v string) {
	return p.Msg
}
func (p *DeleteIDLsResp) SetCode(val int32) {
	p.Code = val
}
func (p *DeleteIDLsResp) SetMsg(val string) {
	p.Msg = val
}

func (p *DeleteIDLsResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("DeleteIDLsResp(%+v)", *p)
}

type UpdateIDLReq struct {
	Id           int64  `thrift:"id,1" frugal:"1,default,i64" json:"id"`
	RepositoryId int64  `thrift:"repository_id,2" frugal:"2,default,i64" json:"repository_id"`
	MainIdlPath  string `thrift:"main_idl_path,3" frugal:"3,default,string" json:"main_idl_path"`
	Status       int32  `thrift:"status,4" frugal:"4,default,i32" json:"status"`
	ServiceName  string `thrift:"service_name,5" frugal:"5,default,string" json:"service_name"`
}

func NewUpdateIDLReq() *UpdateIDLReq {
	return &UpdateIDLReq{}
}

func (p *UpdateIDLReq) InitDefault() {
	*p = UpdateIDLReq{}
}

func (p *UpdateIDLReq) GetId() (v int64) {
	return p.Id
}

func (p *UpdateIDLReq) GetRepositoryId() (v int64) {
	return p.RepositoryId
}

func (p *UpdateIDLReq) GetMainIdlPath() (v string) {
	return p.MainIdlPath
}

func (p *UpdateIDLReq) GetStatus() (v int32) {
	return p.Status
}

func (p *UpdateIDLReq) GetServiceName() (v string) {
	return p.ServiceName
}
func (p *UpdateIDLReq) SetId(val int64) {
	p.Id = val
}
func (p *UpdateIDLReq) SetRepositoryId(val int64) {
	p.RepositoryId = val
}
func (p *UpdateIDLReq) SetMainIdlPath(val string) {
	p.MainIdlPath = val
}
func (p *UpdateIDLReq) SetStatus(val int32) {
	p.Status = val
}
func (p *UpdateIDLReq) SetServiceName(val string) {
	p.ServiceName = val
}

func (p *UpdateIDLReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UpdateIDLReq(%+v)", *p)
}

type UpdateIDLResp struct {
	Code int32  `thrift:"code,1" frugal:"1,default,i32" json:"code"`
	Msg  string `thrift:"msg,2" frugal:"2,default,string" json:"msg"`
}

func NewUpdateIDLResp() *UpdateIDLResp {
	return &UpdateIDLResp{}
}

func (p *UpdateIDLResp) InitDefault() {
	*p = UpdateIDLResp{}
}

func (p *UpdateIDLResp) GetCode() (v int32) {
	return p.Code
}

func (p *UpdateIDLResp) GetMsg() (v string) {
	return p.Msg
}
func (p *UpdateIDLResp) SetCode(val int32) {
	p.Code = val
}
func (p *UpdateIDLResp) SetMsg(val string) {
	p.Msg = val
}

func (p *UpdateIDLResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("UpdateIDLResp(%+v)", *p)
}

type GetIDLsReq struct {
	Page        int32  `thrift:"page,1" frugal:"1,default,i32" json:"page"`
	Limit       int32  `thrift:"limit,2" frugal:"2,default,i32" json:"limit"`
	Order       int32  `thrift:"order,3" frugal:"3,default,i32" json:"order"`
	OrderBy     string `thrift:"order_by,4" frugal:"4,default,string" json:"order_by"`
	ServiceName string `thrift:"service_name,5" frugal:"5,default,string" json:"service_name"`
}

func NewGetIDLsReq() *GetIDLsReq {
	return &GetIDLsReq{}
}

func (p *GetIDLsReq) InitDefault() {
	*p = GetIDLsReq{}
}

func (p *GetIDLsReq) GetPage() (v int32) {
	return p.Page
}

func (p *GetIDLsReq) GetLimit() (v int32) {
	return p.Limit
}

func (p *GetIDLsReq) GetOrder() (v int32) {
	return p.Order
}

func (p *GetIDLsReq) GetOrderBy() (v string) {
	return p.OrderBy
}

func (p *GetIDLsReq) GetServiceName() (v string) {
	return p.ServiceName
}
func (p *GetIDLsReq) SetPage(val int32) {
	p.Page = val
}
func (p *GetIDLsReq) SetLimit(val int32) {
	p.Limit = val
}
func (p *GetIDLsReq) SetOrder(val int32) {
	p.Order = val
}
func (p *GetIDLsReq) SetOrderBy(val string) {
	p.OrderBy = val
}
func (p *GetIDLsReq) SetServiceName(val string) {
	p.ServiceName = val
}

func (p *GetIDLsReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetIDLsReq(%+v)", *p)
}

type GetIDLsResp struct {
	Code int32            `thrift:"code,1" frugal:"1,default,i32" json:"code"`
	Msg  string           `thrift:"msg,2" frugal:"2,default,string" json:"msg"`
	Data *GetIDLsRespData `thrift:"data,3" frugal:"3,default,GetIDLsRespData" json:"data"`
}

func NewGetIDLsResp() *GetIDLsResp {
	return &GetIDLsResp{}
}

func (p *GetIDLsResp) InitDefault() {
	*p = GetIDLsResp{}
}

func (p *GetIDLsResp) GetCode() (v int32) {
	return p.Code
}

func (p *GetIDLsResp) GetMsg() (v string) {
	return p.Msg
}

var GetIDLsResp_Data_DEFAULT *GetIDLsRespData

func (p *GetIDLsResp) GetData() (v *GetIDLsRespData) {
	if !p.IsSetData() {
		return GetIDLsResp_Data_DEFAULT
	}
	return p.Data
}
func (p *GetIDLsResp) SetCode(val int32) {
	p.Code = val
}
func (p *GetIDLsResp) SetMsg(val string) {
	p.Msg = val
}
func (p *GetIDLsResp) SetData(val *GetIDLsRespData) {
	p.Data = val
}

func (p *GetIDLsResp) IsSetData() bool {
	return p.Data != nil
}

func (p *GetIDLsResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetIDLsResp(%+v)", *p)
}

type GetIDLsRespData struct {
	Idls  []*model.IDLWithRepositoryInfo `thrift:"idls,1" frugal:"1,default,list<model.IDLWithRepositoryInfo>" json:"idls"`
	Total int32                          `thrift:"total,2" frugal:"2,default,i32" json:"total"`
}

func NewGetIDLsRespData() *GetIDLsRespData {
	return &GetIDLsRespData{}
}

func (p *GetIDLsRespData) InitDefault() {
	*p = GetIDLsRespData{}
}

func (p *GetIDLsRespData) GetIdls() (v []*model.IDLWithRepositoryInfo) {
	return p.Idls
}

func (p *GetIDLsRespData) GetTotal() (v int32) {
	return p.Total
}
func (p *GetIDLsRespData) SetIdls(val []*model.IDLWithRepositoryInfo) {
	p.Idls = val
}
func (p *GetIDLsRespData) SetTotal(val int32) {
	p.Total = val
}

func (p *GetIDLsRespData) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetIDLsRespData(%+v)", *p)
}

type SyncIDLsByIdReq struct {
	Ids []int64 `thrift:"ids,1" frugal:"1,default,list<i64>" json:"ids"`
}

func NewSyncIDLsByIdReq() *SyncIDLsByIdReq {
	return &SyncIDLsByIdReq{}
}

func (p *SyncIDLsByIdReq) InitDefault() {
	*p = SyncIDLsByIdReq{}
}

func (p *SyncIDLsByIdReq) GetIds() (v []int64) {
	return p.Ids
}
func (p *SyncIDLsByIdReq) SetIds(val []int64) {
	p.Ids = val
}

func (p *SyncIDLsByIdReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SyncIDLsByIdReq(%+v)", *p)
}

type SyncIDLsByIdResp struct {
	Code int32  `thrift:"code,1" frugal:"1,default,i32" json:"code"`
	Msg  string `thrift:"msg,2" frugal:"2,default,string" json:"msg"`
}

func NewSyncIDLsByIdResp() *SyncIDLsByIdResp {
	return &SyncIDLsByIdResp{}
}

func (p *SyncIDLsByIdResp) InitDefault() {
	*p = SyncIDLsByIdResp{}
}

func (p *SyncIDLsByIdResp) GetCode() (v int32) {
	return p.Code
}

func (p *SyncIDLsByIdResp) GetMsg() (v string) {
	return p.Msg
}
func (p *SyncIDLsByIdResp) SetCode(val int32) {
	p.Code = val
}
func (p *SyncIDLsByIdResp) SetMsg(val string) {
	p.Msg = val
}

func (p *SyncIDLsByIdResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("SyncIDLsByIdResp(%+v)", *p)
}
