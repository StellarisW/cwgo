// Code generated by thriftgo (0.3.4). DO NOT EDIT.

package agent

import (
	"context"
	"fmt"
	"github.com/cloudwego/cwgo/platform/server/shared/kitex_gen/task"
)

type PingReq struct {
	Msg string `thrift:"msg,1" frugal:"1,default,string" json:"msg"`
}

func NewPingReq() *PingReq {
	return &PingReq{}
}

func (p *PingReq) InitDefault() {
	*p = PingReq{}
}

func (p *PingReq) GetMsg() (v string) {
	return p.Msg
}
func (p *PingReq) SetMsg(val string) {
	p.Msg = val
}

func (p *PingReq) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("PingReq(%+v)", *p)
}

type PingResp struct {
	Msg string `thrift:"msg,1" frugal:"1,default,string" json:"msg"`
}

func NewPingResp() *PingResp {
	return &PingResp{}
}

func (p *PingResp) InitDefault() {
	*p = PingResp{}
}

func (p *PingResp) GetMsg() (v string) {
	return p.Msg
}
func (p *PingResp) SetMsg(val string) {
	p.Msg = val
}

func (p *PingResp) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("PingResp(%+v)", *p)
}

type AgentService interface {
	Ping(ctx context.Context, req *PingReq) (r *PingResp, err error)

	AddRepository(ctx context.Context, req *AddRepositoryReq) (r *AddRepositoryResp, err error)

	DeleteRepositories(ctx context.Context, req *DeleteRepositoriesReq) (r *DeleteRepositoriesResp, err error)

	UpdateRepository(ctx context.Context, req *UpdateRepositoryReq) (r *UpdateRepositoryResp, err error)

	GetRepositories(ctx context.Context, req *GetRepositoriesReq) (r *GetRepositoriesResp, err error)

	AddIDL(ctx context.Context, req *AddIDLReq) (r *AddIDLResp, err error)

	DeleteIDL(ctx context.Context, req *DeleteIDLsReq) (r *DeleteIDLsResp, err error)

	UpdateIDL(ctx context.Context, req *UpdateIDLReq) (r *UpdateIDLResp, err error)

	GetIDLs(ctx context.Context, req *GetIDLsReq) (r *GetIDLsResp, err error)

	SyncIDLsById(ctx context.Context, req *SyncIDLsByIdReq) (r *SyncIDLsByIdResp, err error)

	AddTemplate(ctx context.Context, req *AddTemplateReq) (r *AddTemplateResp, err error)

	DeleteTemplate(ctx context.Context, req *DeleteTemplateReq) (r *DeleteTemplateResp, err error)

	UpdateTemplate(ctx context.Context, req *UpdateTemplateReq) (r *UpdateTemplateResp, err error)

	GetTemplates(ctx context.Context, req *GetTemplatesReq) (r *GetTemplatesResp, err error)

	AddTemplateItem(ctx context.Context, req *AddTemplateItemReq) (r *AddTemplateItemResp, err error)

	DeleteTemplateItem(ctx context.Context, req *DeleteTemplateItemReq) (r *DeleteTemplateItemResp, err error)

	UpdateTemplateItem(ctx context.Context, req *UpdateTemplateItemReq) (r *UpdateTemplateItemResp, err error)

	GetTemplateItems(ctx context.Context, req *GetTemplateItemsReq) (r *GetTemplateItemsResp, err error)

	UpdateTask(ctx context.Context, req *task.UpdateTaskReq) (r *task.UpdateTaskResp, err error)

	AddToken(ctx context.Context, req *AddTokenReq) (r *AddTokenResp, err error)

	DeleteToken(ctx context.Context, req *DeleteTokenReq) (r *DeleteTokenResp, err error)

	GetToken(ctx context.Context, req *GetTokenReq) (r *GetTokenResp, err error)
}
